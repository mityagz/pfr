// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: capability.proto

#include "capability.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_capability_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AddPathCapabilityTuple_capability_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_capability_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ExtendedNexthopCapabilityTuple_capability_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_gobgp_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Family_gobgp_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_capability_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GracefulRestartCapabilityTuple_capability_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_capability_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_LongLivedGracefulRestartCapabilityTuple_capability_2eproto;
namespace apipb {
class MultiProtocolCapabilityDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MultiProtocolCapability> _instance;
} _MultiProtocolCapability_default_instance_;
class RouteRefreshCapabilityDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RouteRefreshCapability> _instance;
} _RouteRefreshCapability_default_instance_;
class CarryingLabelInfoCapabilityDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CarryingLabelInfoCapability> _instance;
} _CarryingLabelInfoCapability_default_instance_;
class ExtendedNexthopCapabilityTupleDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ExtendedNexthopCapabilityTuple> _instance;
} _ExtendedNexthopCapabilityTuple_default_instance_;
class ExtendedNexthopCapabilityDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ExtendedNexthopCapability> _instance;
} _ExtendedNexthopCapability_default_instance_;
class GracefulRestartCapabilityTupleDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GracefulRestartCapabilityTuple> _instance;
} _GracefulRestartCapabilityTuple_default_instance_;
class GracefulRestartCapabilityDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GracefulRestartCapability> _instance;
} _GracefulRestartCapability_default_instance_;
class FourOctetASNCapabilityDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FourOctetASNCapability> _instance;
} _FourOctetASNCapability_default_instance_;
class AddPathCapabilityTupleDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddPathCapabilityTuple> _instance;
} _AddPathCapabilityTuple_default_instance_;
class AddPathCapabilityDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddPathCapability> _instance;
} _AddPathCapability_default_instance_;
class EnhancedRouteRefreshCapabilityDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<EnhancedRouteRefreshCapability> _instance;
} _EnhancedRouteRefreshCapability_default_instance_;
class LongLivedGracefulRestartCapabilityTupleDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LongLivedGracefulRestartCapabilityTuple> _instance;
} _LongLivedGracefulRestartCapabilityTuple_default_instance_;
class LongLivedGracefulRestartCapabilityDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<LongLivedGracefulRestartCapability> _instance;
} _LongLivedGracefulRestartCapability_default_instance_;
class RouteRefreshCiscoCapabilityDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RouteRefreshCiscoCapability> _instance;
} _RouteRefreshCiscoCapability_default_instance_;
class FqdnCapabilityDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FqdnCapability> _instance;
} _FqdnCapability_default_instance_;
class SoftwareVersionCapabilityDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SoftwareVersionCapability> _instance;
} _SoftwareVersionCapability_default_instance_;
class UnknownCapabilityDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UnknownCapability> _instance;
} _UnknownCapability_default_instance_;
}  // namespace apipb
static void InitDefaultsscc_info_AddPathCapability_capability_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apipb::_AddPathCapability_default_instance_;
    new (ptr) ::apipb::AddPathCapability();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apipb::AddPathCapability::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AddPathCapability_capability_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_AddPathCapability_capability_2eproto}, {
      &scc_info_AddPathCapabilityTuple_capability_2eproto.base,}};

static void InitDefaultsscc_info_AddPathCapabilityTuple_capability_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apipb::_AddPathCapabilityTuple_default_instance_;
    new (ptr) ::apipb::AddPathCapabilityTuple();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apipb::AddPathCapabilityTuple::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AddPathCapabilityTuple_capability_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_AddPathCapabilityTuple_capability_2eproto}, {
      &scc_info_Family_gobgp_2eproto.base,}};

static void InitDefaultsscc_info_CarryingLabelInfoCapability_capability_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apipb::_CarryingLabelInfoCapability_default_instance_;
    new (ptr) ::apipb::CarryingLabelInfoCapability();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apipb::CarryingLabelInfoCapability::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CarryingLabelInfoCapability_capability_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CarryingLabelInfoCapability_capability_2eproto}, {}};

static void InitDefaultsscc_info_EnhancedRouteRefreshCapability_capability_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apipb::_EnhancedRouteRefreshCapability_default_instance_;
    new (ptr) ::apipb::EnhancedRouteRefreshCapability();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apipb::EnhancedRouteRefreshCapability::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_EnhancedRouteRefreshCapability_capability_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_EnhancedRouteRefreshCapability_capability_2eproto}, {}};

static void InitDefaultsscc_info_ExtendedNexthopCapability_capability_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apipb::_ExtendedNexthopCapability_default_instance_;
    new (ptr) ::apipb::ExtendedNexthopCapability();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apipb::ExtendedNexthopCapability::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ExtendedNexthopCapability_capability_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ExtendedNexthopCapability_capability_2eproto}, {
      &scc_info_ExtendedNexthopCapabilityTuple_capability_2eproto.base,}};

static void InitDefaultsscc_info_ExtendedNexthopCapabilityTuple_capability_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apipb::_ExtendedNexthopCapabilityTuple_default_instance_;
    new (ptr) ::apipb::ExtendedNexthopCapabilityTuple();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apipb::ExtendedNexthopCapabilityTuple::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ExtendedNexthopCapabilityTuple_capability_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ExtendedNexthopCapabilityTuple_capability_2eproto}, {
      &scc_info_Family_gobgp_2eproto.base,}};

static void InitDefaultsscc_info_FourOctetASNCapability_capability_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apipb::_FourOctetASNCapability_default_instance_;
    new (ptr) ::apipb::FourOctetASNCapability();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apipb::FourOctetASNCapability::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FourOctetASNCapability_capability_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FourOctetASNCapability_capability_2eproto}, {}};

static void InitDefaultsscc_info_FqdnCapability_capability_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apipb::_FqdnCapability_default_instance_;
    new (ptr) ::apipb::FqdnCapability();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apipb::FqdnCapability::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FqdnCapability_capability_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FqdnCapability_capability_2eproto}, {}};

static void InitDefaultsscc_info_GracefulRestartCapability_capability_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apipb::_GracefulRestartCapability_default_instance_;
    new (ptr) ::apipb::GracefulRestartCapability();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apipb::GracefulRestartCapability::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GracefulRestartCapability_capability_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GracefulRestartCapability_capability_2eproto}, {
      &scc_info_GracefulRestartCapabilityTuple_capability_2eproto.base,}};

static void InitDefaultsscc_info_GracefulRestartCapabilityTuple_capability_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apipb::_GracefulRestartCapabilityTuple_default_instance_;
    new (ptr) ::apipb::GracefulRestartCapabilityTuple();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apipb::GracefulRestartCapabilityTuple::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GracefulRestartCapabilityTuple_capability_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GracefulRestartCapabilityTuple_capability_2eproto}, {
      &scc_info_Family_gobgp_2eproto.base,}};

static void InitDefaultsscc_info_LongLivedGracefulRestartCapability_capability_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apipb::_LongLivedGracefulRestartCapability_default_instance_;
    new (ptr) ::apipb::LongLivedGracefulRestartCapability();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apipb::LongLivedGracefulRestartCapability::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_LongLivedGracefulRestartCapability_capability_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_LongLivedGracefulRestartCapability_capability_2eproto}, {
      &scc_info_LongLivedGracefulRestartCapabilityTuple_capability_2eproto.base,}};

static void InitDefaultsscc_info_LongLivedGracefulRestartCapabilityTuple_capability_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apipb::_LongLivedGracefulRestartCapabilityTuple_default_instance_;
    new (ptr) ::apipb::LongLivedGracefulRestartCapabilityTuple();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apipb::LongLivedGracefulRestartCapabilityTuple::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_LongLivedGracefulRestartCapabilityTuple_capability_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_LongLivedGracefulRestartCapabilityTuple_capability_2eproto}, {
      &scc_info_Family_gobgp_2eproto.base,}};

static void InitDefaultsscc_info_MultiProtocolCapability_capability_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apipb::_MultiProtocolCapability_default_instance_;
    new (ptr) ::apipb::MultiProtocolCapability();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apipb::MultiProtocolCapability::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_MultiProtocolCapability_capability_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_MultiProtocolCapability_capability_2eproto}, {
      &scc_info_Family_gobgp_2eproto.base,}};

static void InitDefaultsscc_info_RouteRefreshCapability_capability_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apipb::_RouteRefreshCapability_default_instance_;
    new (ptr) ::apipb::RouteRefreshCapability();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apipb::RouteRefreshCapability::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RouteRefreshCapability_capability_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RouteRefreshCapability_capability_2eproto}, {}};

static void InitDefaultsscc_info_RouteRefreshCiscoCapability_capability_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apipb::_RouteRefreshCiscoCapability_default_instance_;
    new (ptr) ::apipb::RouteRefreshCiscoCapability();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apipb::RouteRefreshCiscoCapability::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RouteRefreshCiscoCapability_capability_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RouteRefreshCiscoCapability_capability_2eproto}, {}};

static void InitDefaultsscc_info_SoftwareVersionCapability_capability_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apipb::_SoftwareVersionCapability_default_instance_;
    new (ptr) ::apipb::SoftwareVersionCapability();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apipb::SoftwareVersionCapability::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SoftwareVersionCapability_capability_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SoftwareVersionCapability_capability_2eproto}, {}};

static void InitDefaultsscc_info_UnknownCapability_capability_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apipb::_UnknownCapability_default_instance_;
    new (ptr) ::apipb::UnknownCapability();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apipb::UnknownCapability::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_UnknownCapability_capability_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_UnknownCapability_capability_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_capability_2eproto[17];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_capability_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_capability_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_capability_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::apipb::MultiProtocolCapability, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apipb::MultiProtocolCapability, family_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::apipb::RouteRefreshCapability, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::apipb::CarryingLabelInfoCapability, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::apipb::ExtendedNexthopCapabilityTuple, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apipb::ExtendedNexthopCapabilityTuple, nlri_family_),
  PROTOBUF_FIELD_OFFSET(::apipb::ExtendedNexthopCapabilityTuple, nexthop_family_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::apipb::ExtendedNexthopCapability, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apipb::ExtendedNexthopCapability, tuples_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::apipb::GracefulRestartCapabilityTuple, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apipb::GracefulRestartCapabilityTuple, family_),
  PROTOBUF_FIELD_OFFSET(::apipb::GracefulRestartCapabilityTuple, flags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::apipb::GracefulRestartCapability, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apipb::GracefulRestartCapability, flags_),
  PROTOBUF_FIELD_OFFSET(::apipb::GracefulRestartCapability, time_),
  PROTOBUF_FIELD_OFFSET(::apipb::GracefulRestartCapability, tuples_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::apipb::FourOctetASNCapability, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apipb::FourOctetASNCapability, asn_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::apipb::AddPathCapabilityTuple, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apipb::AddPathCapabilityTuple, family_),
  PROTOBUF_FIELD_OFFSET(::apipb::AddPathCapabilityTuple, mode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::apipb::AddPathCapability, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apipb::AddPathCapability, tuples_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::apipb::EnhancedRouteRefreshCapability, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::apipb::LongLivedGracefulRestartCapabilityTuple, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apipb::LongLivedGracefulRestartCapabilityTuple, family_),
  PROTOBUF_FIELD_OFFSET(::apipb::LongLivedGracefulRestartCapabilityTuple, flags_),
  PROTOBUF_FIELD_OFFSET(::apipb::LongLivedGracefulRestartCapabilityTuple, time_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::apipb::LongLivedGracefulRestartCapability, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apipb::LongLivedGracefulRestartCapability, tuples_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::apipb::RouteRefreshCiscoCapability, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::apipb::FqdnCapability, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apipb::FqdnCapability, host_name_),
  PROTOBUF_FIELD_OFFSET(::apipb::FqdnCapability, domain_name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::apipb::SoftwareVersionCapability, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apipb::SoftwareVersionCapability, software_version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::apipb::UnknownCapability, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apipb::UnknownCapability, code_),
  PROTOBUF_FIELD_OFFSET(::apipb::UnknownCapability, value_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::apipb::MultiProtocolCapability)},
  { 6, -1, sizeof(::apipb::RouteRefreshCapability)},
  { 11, -1, sizeof(::apipb::CarryingLabelInfoCapability)},
  { 16, -1, sizeof(::apipb::ExtendedNexthopCapabilityTuple)},
  { 23, -1, sizeof(::apipb::ExtendedNexthopCapability)},
  { 29, -1, sizeof(::apipb::GracefulRestartCapabilityTuple)},
  { 36, -1, sizeof(::apipb::GracefulRestartCapability)},
  { 44, -1, sizeof(::apipb::FourOctetASNCapability)},
  { 50, -1, sizeof(::apipb::AddPathCapabilityTuple)},
  { 57, -1, sizeof(::apipb::AddPathCapability)},
  { 63, -1, sizeof(::apipb::EnhancedRouteRefreshCapability)},
  { 68, -1, sizeof(::apipb::LongLivedGracefulRestartCapabilityTuple)},
  { 76, -1, sizeof(::apipb::LongLivedGracefulRestartCapability)},
  { 82, -1, sizeof(::apipb::RouteRefreshCiscoCapability)},
  { 87, -1, sizeof(::apipb::FqdnCapability)},
  { 94, -1, sizeof(::apipb::SoftwareVersionCapability)},
  { 100, -1, sizeof(::apipb::UnknownCapability)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apipb::_MultiProtocolCapability_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apipb::_RouteRefreshCapability_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apipb::_CarryingLabelInfoCapability_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apipb::_ExtendedNexthopCapabilityTuple_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apipb::_ExtendedNexthopCapability_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apipb::_GracefulRestartCapabilityTuple_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apipb::_GracefulRestartCapability_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apipb::_FourOctetASNCapability_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apipb::_AddPathCapabilityTuple_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apipb::_AddPathCapability_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apipb::_EnhancedRouteRefreshCapability_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apipb::_LongLivedGracefulRestartCapabilityTuple_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apipb::_LongLivedGracefulRestartCapability_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apipb::_RouteRefreshCiscoCapability_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apipb::_FqdnCapability_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apipb::_SoftwareVersionCapability_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apipb::_UnknownCapability_default_instance_),
};

const char descriptor_table_protodef_capability_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020capability.proto\022\005apipb\032\013gobgp.proto\"8"
  "\n\027MultiProtocolCapability\022\035\n\006family\030\001 \001("
  "\0132\r.apipb.Family\"\030\n\026RouteRefreshCapabili"
  "ty\"\035\n\033CarryingLabelInfoCapability\"k\n\036Ext"
  "endedNexthopCapabilityTuple\022\"\n\013nlri_fami"
  "ly\030\001 \001(\0132\r.apipb.Family\022%\n\016nexthop_famil"
  "y\030\002 \001(\0132\r.apipb.Family\"R\n\031ExtendedNextho"
  "pCapability\0225\n\006tuples\030\001 \003(\0132%.apipb.Exte"
  "ndedNexthopCapabilityTuple\"N\n\036GracefulRe"
  "startCapabilityTuple\022\035\n\006family\030\001 \001(\0132\r.a"
  "pipb.Family\022\r\n\005flags\030\002 \001(\r\"o\n\031GracefulRe"
  "startCapability\022\r\n\005flags\030\001 \001(\r\022\014\n\004time\030\002"
  " \001(\r\0225\n\006tuples\030\003 \003(\0132%.apipb.GracefulRes"
  "tartCapabilityTuple\"%\n\026FourOctetASNCapab"
  "ility\022\013\n\003asn\030\001 \001(\r\"\234\001\n\026AddPathCapability"
  "Tuple\022\035\n\006family\030\001 \001(\0132\r.apipb.Family\0220\n\004"
  "mode\030\002 \001(\0162\".apipb.AddPathCapabilityTupl"
  "e.Mode\"1\n\004Mode\022\010\n\004NONE\020\000\022\013\n\007RECEIVE\020\001\022\010\n"
  "\004SEND\020\002\022\010\n\004BOTH\020\003\"B\n\021AddPathCapability\022-"
  "\n\006tuples\030\001 \003(\0132\035.apipb.AddPathCapability"
  "Tuple\" \n\036EnhancedRouteRefreshCapability\""
  "e\n\'LongLivedGracefulRestartCapabilityTup"
  "le\022\035\n\006family\030\001 \001(\0132\r.apipb.Family\022\r\n\005fla"
  "gs\030\002 \001(\r\022\014\n\004time\030\003 \001(\r\"d\n\"LongLivedGrace"
  "fulRestartCapability\022>\n\006tuples\030\001 \003(\0132..a"
  "pipb.LongLivedGracefulRestartCapabilityT"
  "uple\"\035\n\033RouteRefreshCiscoCapability\"8\n\016F"
  "qdnCapability\022\021\n\thost_name\030\001 \001(\t\022\023\n\013doma"
  "in_name\030\002 \001(\t\"5\n\031SoftwareVersionCapabili"
  "ty\022\030\n\020software_version\030\001 \001(\t\"0\n\021UnknownC"
  "apability\022\014\n\004code\030\001 \001(\r\022\r\n\005value\030\002 \001(\014B$"
  "Z\"github.com/osrg/gobgp/v3/api;apipbb\006pr"
  "oto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_capability_2eproto_deps[1] = {
  &::descriptor_table_gobgp_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_capability_2eproto_sccs[17] = {
  &scc_info_AddPathCapability_capability_2eproto.base,
  &scc_info_AddPathCapabilityTuple_capability_2eproto.base,
  &scc_info_CarryingLabelInfoCapability_capability_2eproto.base,
  &scc_info_EnhancedRouteRefreshCapability_capability_2eproto.base,
  &scc_info_ExtendedNexthopCapability_capability_2eproto.base,
  &scc_info_ExtendedNexthopCapabilityTuple_capability_2eproto.base,
  &scc_info_FourOctetASNCapability_capability_2eproto.base,
  &scc_info_FqdnCapability_capability_2eproto.base,
  &scc_info_GracefulRestartCapability_capability_2eproto.base,
  &scc_info_GracefulRestartCapabilityTuple_capability_2eproto.base,
  &scc_info_LongLivedGracefulRestartCapability_capability_2eproto.base,
  &scc_info_LongLivedGracefulRestartCapabilityTuple_capability_2eproto.base,
  &scc_info_MultiProtocolCapability_capability_2eproto.base,
  &scc_info_RouteRefreshCapability_capability_2eproto.base,
  &scc_info_RouteRefreshCiscoCapability_capability_2eproto.base,
  &scc_info_SoftwareVersionCapability_capability_2eproto.base,
  &scc_info_UnknownCapability_capability_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_capability_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_capability_2eproto = {
  false, false, descriptor_table_protodef_capability_2eproto, "capability.proto", 1284,
  &descriptor_table_capability_2eproto_once, descriptor_table_capability_2eproto_sccs, descriptor_table_capability_2eproto_deps, 17, 1,
  schemas, file_default_instances, TableStruct_capability_2eproto::offsets,
  file_level_metadata_capability_2eproto, 17, file_level_enum_descriptors_capability_2eproto, file_level_service_descriptors_capability_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_capability_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_capability_2eproto)), true);
namespace apipb {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AddPathCapabilityTuple_Mode_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_capability_2eproto);
  return file_level_enum_descriptors_capability_2eproto[0];
}
bool AddPathCapabilityTuple_Mode_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr AddPathCapabilityTuple_Mode AddPathCapabilityTuple::NONE;
constexpr AddPathCapabilityTuple_Mode AddPathCapabilityTuple::RECEIVE;
constexpr AddPathCapabilityTuple_Mode AddPathCapabilityTuple::SEND;
constexpr AddPathCapabilityTuple_Mode AddPathCapabilityTuple::BOTH;
constexpr AddPathCapabilityTuple_Mode AddPathCapabilityTuple::Mode_MIN;
constexpr AddPathCapabilityTuple_Mode AddPathCapabilityTuple::Mode_MAX;
constexpr int AddPathCapabilityTuple::Mode_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void MultiProtocolCapability::InitAsDefaultInstance() {
  ::apipb::_MultiProtocolCapability_default_instance_._instance.get_mutable()->family_ = const_cast< ::apipb::Family*>(
      ::apipb::Family::internal_default_instance());
}
class MultiProtocolCapability::_Internal {
 public:
  static const ::apipb::Family& family(const MultiProtocolCapability* msg);
};

const ::apipb::Family&
MultiProtocolCapability::_Internal::family(const MultiProtocolCapability* msg) {
  return *msg->family_;
}
void MultiProtocolCapability::clear_family() {
  if (GetArena() == nullptr && family_ != nullptr) {
    delete family_;
  }
  family_ = nullptr;
}
MultiProtocolCapability::MultiProtocolCapability(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apipb.MultiProtocolCapability)
}
MultiProtocolCapability::MultiProtocolCapability(const MultiProtocolCapability& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_family()) {
    family_ = new ::apipb::Family(*from.family_);
  } else {
    family_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:apipb.MultiProtocolCapability)
}

void MultiProtocolCapability::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MultiProtocolCapability_capability_2eproto.base);
  family_ = nullptr;
}

MultiProtocolCapability::~MultiProtocolCapability() {
  // @@protoc_insertion_point(destructor:apipb.MultiProtocolCapability)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MultiProtocolCapability::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete family_;
}

void MultiProtocolCapability::ArenaDtor(void* object) {
  MultiProtocolCapability* _this = reinterpret_cast< MultiProtocolCapability* >(object);
  (void)_this;
}
void MultiProtocolCapability::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MultiProtocolCapability::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MultiProtocolCapability& MultiProtocolCapability::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MultiProtocolCapability_capability_2eproto.base);
  return *internal_default_instance();
}


void MultiProtocolCapability::Clear() {
// @@protoc_insertion_point(message_clear_start:apipb.MultiProtocolCapability)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && family_ != nullptr) {
    delete family_;
  }
  family_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MultiProtocolCapability::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .apipb.Family family = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_family(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MultiProtocolCapability::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apipb.MultiProtocolCapability)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .apipb.Family family = 1;
  if (this->has_family()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::family(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apipb.MultiProtocolCapability)
  return target;
}

size_t MultiProtocolCapability::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apipb.MultiProtocolCapability)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .apipb.Family family = 1;
  if (this->has_family()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *family_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MultiProtocolCapability::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apipb.MultiProtocolCapability)
  GOOGLE_DCHECK_NE(&from, this);
  const MultiProtocolCapability* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MultiProtocolCapability>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apipb.MultiProtocolCapability)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apipb.MultiProtocolCapability)
    MergeFrom(*source);
  }
}

void MultiProtocolCapability::MergeFrom(const MultiProtocolCapability& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apipb.MultiProtocolCapability)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_family()) {
    _internal_mutable_family()->::apipb::Family::MergeFrom(from._internal_family());
  }
}

void MultiProtocolCapability::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apipb.MultiProtocolCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MultiProtocolCapability::CopyFrom(const MultiProtocolCapability& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apipb.MultiProtocolCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MultiProtocolCapability::IsInitialized() const {
  return true;
}

void MultiProtocolCapability::InternalSwap(MultiProtocolCapability* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(family_, other->family_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MultiProtocolCapability::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RouteRefreshCapability::InitAsDefaultInstance() {
}
class RouteRefreshCapability::_Internal {
 public:
};

RouteRefreshCapability::RouteRefreshCapability(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apipb.RouteRefreshCapability)
}
RouteRefreshCapability::RouteRefreshCapability(const RouteRefreshCapability& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apipb.RouteRefreshCapability)
}

void RouteRefreshCapability::SharedCtor() {
}

RouteRefreshCapability::~RouteRefreshCapability() {
  // @@protoc_insertion_point(destructor:apipb.RouteRefreshCapability)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RouteRefreshCapability::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RouteRefreshCapability::ArenaDtor(void* object) {
  RouteRefreshCapability* _this = reinterpret_cast< RouteRefreshCapability* >(object);
  (void)_this;
}
void RouteRefreshCapability::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RouteRefreshCapability::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RouteRefreshCapability& RouteRefreshCapability::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RouteRefreshCapability_capability_2eproto.base);
  return *internal_default_instance();
}


void RouteRefreshCapability::Clear() {
// @@protoc_insertion_point(message_clear_start:apipb.RouteRefreshCapability)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RouteRefreshCapability::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RouteRefreshCapability::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apipb.RouteRefreshCapability)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apipb.RouteRefreshCapability)
  return target;
}

size_t RouteRefreshCapability::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apipb.RouteRefreshCapability)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RouteRefreshCapability::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apipb.RouteRefreshCapability)
  GOOGLE_DCHECK_NE(&from, this);
  const RouteRefreshCapability* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RouteRefreshCapability>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apipb.RouteRefreshCapability)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apipb.RouteRefreshCapability)
    MergeFrom(*source);
  }
}

void RouteRefreshCapability::MergeFrom(const RouteRefreshCapability& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apipb.RouteRefreshCapability)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RouteRefreshCapability::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apipb.RouteRefreshCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RouteRefreshCapability::CopyFrom(const RouteRefreshCapability& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apipb.RouteRefreshCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RouteRefreshCapability::IsInitialized() const {
  return true;
}

void RouteRefreshCapability::InternalSwap(RouteRefreshCapability* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RouteRefreshCapability::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CarryingLabelInfoCapability::InitAsDefaultInstance() {
}
class CarryingLabelInfoCapability::_Internal {
 public:
};

CarryingLabelInfoCapability::CarryingLabelInfoCapability(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apipb.CarryingLabelInfoCapability)
}
CarryingLabelInfoCapability::CarryingLabelInfoCapability(const CarryingLabelInfoCapability& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apipb.CarryingLabelInfoCapability)
}

void CarryingLabelInfoCapability::SharedCtor() {
}

CarryingLabelInfoCapability::~CarryingLabelInfoCapability() {
  // @@protoc_insertion_point(destructor:apipb.CarryingLabelInfoCapability)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CarryingLabelInfoCapability::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CarryingLabelInfoCapability::ArenaDtor(void* object) {
  CarryingLabelInfoCapability* _this = reinterpret_cast< CarryingLabelInfoCapability* >(object);
  (void)_this;
}
void CarryingLabelInfoCapability::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CarryingLabelInfoCapability::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CarryingLabelInfoCapability& CarryingLabelInfoCapability::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CarryingLabelInfoCapability_capability_2eproto.base);
  return *internal_default_instance();
}


void CarryingLabelInfoCapability::Clear() {
// @@protoc_insertion_point(message_clear_start:apipb.CarryingLabelInfoCapability)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CarryingLabelInfoCapability::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CarryingLabelInfoCapability::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apipb.CarryingLabelInfoCapability)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apipb.CarryingLabelInfoCapability)
  return target;
}

size_t CarryingLabelInfoCapability::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apipb.CarryingLabelInfoCapability)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CarryingLabelInfoCapability::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apipb.CarryingLabelInfoCapability)
  GOOGLE_DCHECK_NE(&from, this);
  const CarryingLabelInfoCapability* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CarryingLabelInfoCapability>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apipb.CarryingLabelInfoCapability)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apipb.CarryingLabelInfoCapability)
    MergeFrom(*source);
  }
}

void CarryingLabelInfoCapability::MergeFrom(const CarryingLabelInfoCapability& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apipb.CarryingLabelInfoCapability)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void CarryingLabelInfoCapability::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apipb.CarryingLabelInfoCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CarryingLabelInfoCapability::CopyFrom(const CarryingLabelInfoCapability& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apipb.CarryingLabelInfoCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CarryingLabelInfoCapability::IsInitialized() const {
  return true;
}

void CarryingLabelInfoCapability::InternalSwap(CarryingLabelInfoCapability* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CarryingLabelInfoCapability::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ExtendedNexthopCapabilityTuple::InitAsDefaultInstance() {
  ::apipb::_ExtendedNexthopCapabilityTuple_default_instance_._instance.get_mutable()->nlri_family_ = const_cast< ::apipb::Family*>(
      ::apipb::Family::internal_default_instance());
  ::apipb::_ExtendedNexthopCapabilityTuple_default_instance_._instance.get_mutable()->nexthop_family_ = const_cast< ::apipb::Family*>(
      ::apipb::Family::internal_default_instance());
}
class ExtendedNexthopCapabilityTuple::_Internal {
 public:
  static const ::apipb::Family& nlri_family(const ExtendedNexthopCapabilityTuple* msg);
  static const ::apipb::Family& nexthop_family(const ExtendedNexthopCapabilityTuple* msg);
};

const ::apipb::Family&
ExtendedNexthopCapabilityTuple::_Internal::nlri_family(const ExtendedNexthopCapabilityTuple* msg) {
  return *msg->nlri_family_;
}
const ::apipb::Family&
ExtendedNexthopCapabilityTuple::_Internal::nexthop_family(const ExtendedNexthopCapabilityTuple* msg) {
  return *msg->nexthop_family_;
}
void ExtendedNexthopCapabilityTuple::clear_nlri_family() {
  if (GetArena() == nullptr && nlri_family_ != nullptr) {
    delete nlri_family_;
  }
  nlri_family_ = nullptr;
}
void ExtendedNexthopCapabilityTuple::clear_nexthop_family() {
  if (GetArena() == nullptr && nexthop_family_ != nullptr) {
    delete nexthop_family_;
  }
  nexthop_family_ = nullptr;
}
ExtendedNexthopCapabilityTuple::ExtendedNexthopCapabilityTuple(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apipb.ExtendedNexthopCapabilityTuple)
}
ExtendedNexthopCapabilityTuple::ExtendedNexthopCapabilityTuple(const ExtendedNexthopCapabilityTuple& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_nlri_family()) {
    nlri_family_ = new ::apipb::Family(*from.nlri_family_);
  } else {
    nlri_family_ = nullptr;
  }
  if (from._internal_has_nexthop_family()) {
    nexthop_family_ = new ::apipb::Family(*from.nexthop_family_);
  } else {
    nexthop_family_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:apipb.ExtendedNexthopCapabilityTuple)
}

void ExtendedNexthopCapabilityTuple::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ExtendedNexthopCapabilityTuple_capability_2eproto.base);
  ::memset(&nlri_family_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nexthop_family_) -
      reinterpret_cast<char*>(&nlri_family_)) + sizeof(nexthop_family_));
}

ExtendedNexthopCapabilityTuple::~ExtendedNexthopCapabilityTuple() {
  // @@protoc_insertion_point(destructor:apipb.ExtendedNexthopCapabilityTuple)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ExtendedNexthopCapabilityTuple::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete nlri_family_;
  if (this != internal_default_instance()) delete nexthop_family_;
}

void ExtendedNexthopCapabilityTuple::ArenaDtor(void* object) {
  ExtendedNexthopCapabilityTuple* _this = reinterpret_cast< ExtendedNexthopCapabilityTuple* >(object);
  (void)_this;
}
void ExtendedNexthopCapabilityTuple::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExtendedNexthopCapabilityTuple::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExtendedNexthopCapabilityTuple& ExtendedNexthopCapabilityTuple::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ExtendedNexthopCapabilityTuple_capability_2eproto.base);
  return *internal_default_instance();
}


void ExtendedNexthopCapabilityTuple::Clear() {
// @@protoc_insertion_point(message_clear_start:apipb.ExtendedNexthopCapabilityTuple)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && nlri_family_ != nullptr) {
    delete nlri_family_;
  }
  nlri_family_ = nullptr;
  if (GetArena() == nullptr && nexthop_family_ != nullptr) {
    delete nexthop_family_;
  }
  nexthop_family_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExtendedNexthopCapabilityTuple::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .apipb.Family nlri_family = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_nlri_family(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .apipb.Family nexthop_family = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_nexthop_family(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExtendedNexthopCapabilityTuple::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apipb.ExtendedNexthopCapabilityTuple)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .apipb.Family nlri_family = 1;
  if (this->has_nlri_family()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::nlri_family(this), target, stream);
  }

  // .apipb.Family nexthop_family = 2;
  if (this->has_nexthop_family()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::nexthop_family(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apipb.ExtendedNexthopCapabilityTuple)
  return target;
}

size_t ExtendedNexthopCapabilityTuple::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apipb.ExtendedNexthopCapabilityTuple)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .apipb.Family nlri_family = 1;
  if (this->has_nlri_family()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *nlri_family_);
  }

  // .apipb.Family nexthop_family = 2;
  if (this->has_nexthop_family()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *nexthop_family_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExtendedNexthopCapabilityTuple::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apipb.ExtendedNexthopCapabilityTuple)
  GOOGLE_DCHECK_NE(&from, this);
  const ExtendedNexthopCapabilityTuple* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExtendedNexthopCapabilityTuple>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apipb.ExtendedNexthopCapabilityTuple)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apipb.ExtendedNexthopCapabilityTuple)
    MergeFrom(*source);
  }
}

void ExtendedNexthopCapabilityTuple::MergeFrom(const ExtendedNexthopCapabilityTuple& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apipb.ExtendedNexthopCapabilityTuple)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_nlri_family()) {
    _internal_mutable_nlri_family()->::apipb::Family::MergeFrom(from._internal_nlri_family());
  }
  if (from.has_nexthop_family()) {
    _internal_mutable_nexthop_family()->::apipb::Family::MergeFrom(from._internal_nexthop_family());
  }
}

void ExtendedNexthopCapabilityTuple::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apipb.ExtendedNexthopCapabilityTuple)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExtendedNexthopCapabilityTuple::CopyFrom(const ExtendedNexthopCapabilityTuple& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apipb.ExtendedNexthopCapabilityTuple)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExtendedNexthopCapabilityTuple::IsInitialized() const {
  return true;
}

void ExtendedNexthopCapabilityTuple::InternalSwap(ExtendedNexthopCapabilityTuple* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ExtendedNexthopCapabilityTuple, nexthop_family_)
      + sizeof(ExtendedNexthopCapabilityTuple::nexthop_family_)
      - PROTOBUF_FIELD_OFFSET(ExtendedNexthopCapabilityTuple, nlri_family_)>(
          reinterpret_cast<char*>(&nlri_family_),
          reinterpret_cast<char*>(&other->nlri_family_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ExtendedNexthopCapabilityTuple::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ExtendedNexthopCapability::InitAsDefaultInstance() {
}
class ExtendedNexthopCapability::_Internal {
 public:
};

ExtendedNexthopCapability::ExtendedNexthopCapability(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  tuples_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apipb.ExtendedNexthopCapability)
}
ExtendedNexthopCapability::ExtendedNexthopCapability(const ExtendedNexthopCapability& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      tuples_(from.tuples_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apipb.ExtendedNexthopCapability)
}

void ExtendedNexthopCapability::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ExtendedNexthopCapability_capability_2eproto.base);
}

ExtendedNexthopCapability::~ExtendedNexthopCapability() {
  // @@protoc_insertion_point(destructor:apipb.ExtendedNexthopCapability)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ExtendedNexthopCapability::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ExtendedNexthopCapability::ArenaDtor(void* object) {
  ExtendedNexthopCapability* _this = reinterpret_cast< ExtendedNexthopCapability* >(object);
  (void)_this;
}
void ExtendedNexthopCapability::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ExtendedNexthopCapability::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExtendedNexthopCapability& ExtendedNexthopCapability::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ExtendedNexthopCapability_capability_2eproto.base);
  return *internal_default_instance();
}


void ExtendedNexthopCapability::Clear() {
// @@protoc_insertion_point(message_clear_start:apipb.ExtendedNexthopCapability)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tuples_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ExtendedNexthopCapability::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .apipb.ExtendedNexthopCapabilityTuple tuples = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_tuples(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExtendedNexthopCapability::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apipb.ExtendedNexthopCapability)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apipb.ExtendedNexthopCapabilityTuple tuples = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_tuples_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_tuples(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apipb.ExtendedNexthopCapability)
  return target;
}

size_t ExtendedNexthopCapability::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apipb.ExtendedNexthopCapability)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .apipb.ExtendedNexthopCapabilityTuple tuples = 1;
  total_size += 1UL * this->_internal_tuples_size();
  for (const auto& msg : this->tuples_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExtendedNexthopCapability::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apipb.ExtendedNexthopCapability)
  GOOGLE_DCHECK_NE(&from, this);
  const ExtendedNexthopCapability* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExtendedNexthopCapability>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apipb.ExtendedNexthopCapability)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apipb.ExtendedNexthopCapability)
    MergeFrom(*source);
  }
}

void ExtendedNexthopCapability::MergeFrom(const ExtendedNexthopCapability& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apipb.ExtendedNexthopCapability)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tuples_.MergeFrom(from.tuples_);
}

void ExtendedNexthopCapability::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apipb.ExtendedNexthopCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExtendedNexthopCapability::CopyFrom(const ExtendedNexthopCapability& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apipb.ExtendedNexthopCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExtendedNexthopCapability::IsInitialized() const {
  return true;
}

void ExtendedNexthopCapability::InternalSwap(ExtendedNexthopCapability* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  tuples_.InternalSwap(&other->tuples_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ExtendedNexthopCapability::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GracefulRestartCapabilityTuple::InitAsDefaultInstance() {
  ::apipb::_GracefulRestartCapabilityTuple_default_instance_._instance.get_mutable()->family_ = const_cast< ::apipb::Family*>(
      ::apipb::Family::internal_default_instance());
}
class GracefulRestartCapabilityTuple::_Internal {
 public:
  static const ::apipb::Family& family(const GracefulRestartCapabilityTuple* msg);
};

const ::apipb::Family&
GracefulRestartCapabilityTuple::_Internal::family(const GracefulRestartCapabilityTuple* msg) {
  return *msg->family_;
}
void GracefulRestartCapabilityTuple::clear_family() {
  if (GetArena() == nullptr && family_ != nullptr) {
    delete family_;
  }
  family_ = nullptr;
}
GracefulRestartCapabilityTuple::GracefulRestartCapabilityTuple(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apipb.GracefulRestartCapabilityTuple)
}
GracefulRestartCapabilityTuple::GracefulRestartCapabilityTuple(const GracefulRestartCapabilityTuple& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_family()) {
    family_ = new ::apipb::Family(*from.family_);
  } else {
    family_ = nullptr;
  }
  flags_ = from.flags_;
  // @@protoc_insertion_point(copy_constructor:apipb.GracefulRestartCapabilityTuple)
}

void GracefulRestartCapabilityTuple::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GracefulRestartCapabilityTuple_capability_2eproto.base);
  ::memset(&family_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flags_) -
      reinterpret_cast<char*>(&family_)) + sizeof(flags_));
}

GracefulRestartCapabilityTuple::~GracefulRestartCapabilityTuple() {
  // @@protoc_insertion_point(destructor:apipb.GracefulRestartCapabilityTuple)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GracefulRestartCapabilityTuple::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete family_;
}

void GracefulRestartCapabilityTuple::ArenaDtor(void* object) {
  GracefulRestartCapabilityTuple* _this = reinterpret_cast< GracefulRestartCapabilityTuple* >(object);
  (void)_this;
}
void GracefulRestartCapabilityTuple::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GracefulRestartCapabilityTuple::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GracefulRestartCapabilityTuple& GracefulRestartCapabilityTuple::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GracefulRestartCapabilityTuple_capability_2eproto.base);
  return *internal_default_instance();
}


void GracefulRestartCapabilityTuple::Clear() {
// @@protoc_insertion_point(message_clear_start:apipb.GracefulRestartCapabilityTuple)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && family_ != nullptr) {
    delete family_;
  }
  family_ = nullptr;
  flags_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GracefulRestartCapabilityTuple::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .apipb.Family family = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_family(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 flags = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GracefulRestartCapabilityTuple::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apipb.GracefulRestartCapabilityTuple)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .apipb.Family family = 1;
  if (this->has_family()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::family(this), target, stream);
  }

  // uint32 flags = 2;
  if (this->flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_flags(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apipb.GracefulRestartCapabilityTuple)
  return target;
}

size_t GracefulRestartCapabilityTuple::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apipb.GracefulRestartCapabilityTuple)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .apipb.Family family = 1;
  if (this->has_family()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *family_);
  }

  // uint32 flags = 2;
  if (this->flags() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_flags());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GracefulRestartCapabilityTuple::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apipb.GracefulRestartCapabilityTuple)
  GOOGLE_DCHECK_NE(&from, this);
  const GracefulRestartCapabilityTuple* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GracefulRestartCapabilityTuple>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apipb.GracefulRestartCapabilityTuple)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apipb.GracefulRestartCapabilityTuple)
    MergeFrom(*source);
  }
}

void GracefulRestartCapabilityTuple::MergeFrom(const GracefulRestartCapabilityTuple& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apipb.GracefulRestartCapabilityTuple)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_family()) {
    _internal_mutable_family()->::apipb::Family::MergeFrom(from._internal_family());
  }
  if (from.flags() != 0) {
    _internal_set_flags(from._internal_flags());
  }
}

void GracefulRestartCapabilityTuple::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apipb.GracefulRestartCapabilityTuple)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GracefulRestartCapabilityTuple::CopyFrom(const GracefulRestartCapabilityTuple& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apipb.GracefulRestartCapabilityTuple)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GracefulRestartCapabilityTuple::IsInitialized() const {
  return true;
}

void GracefulRestartCapabilityTuple::InternalSwap(GracefulRestartCapabilityTuple* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GracefulRestartCapabilityTuple, flags_)
      + sizeof(GracefulRestartCapabilityTuple::flags_)
      - PROTOBUF_FIELD_OFFSET(GracefulRestartCapabilityTuple, family_)>(
          reinterpret_cast<char*>(&family_),
          reinterpret_cast<char*>(&other->family_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GracefulRestartCapabilityTuple::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GracefulRestartCapability::InitAsDefaultInstance() {
}
class GracefulRestartCapability::_Internal {
 public:
};

GracefulRestartCapability::GracefulRestartCapability(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  tuples_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apipb.GracefulRestartCapability)
}
GracefulRestartCapability::GracefulRestartCapability(const GracefulRestartCapability& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      tuples_(from.tuples_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&flags_, &from.flags_,
    static_cast<size_t>(reinterpret_cast<char*>(&time_) -
    reinterpret_cast<char*>(&flags_)) + sizeof(time_));
  // @@protoc_insertion_point(copy_constructor:apipb.GracefulRestartCapability)
}

void GracefulRestartCapability::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GracefulRestartCapability_capability_2eproto.base);
  ::memset(&flags_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_) -
      reinterpret_cast<char*>(&flags_)) + sizeof(time_));
}

GracefulRestartCapability::~GracefulRestartCapability() {
  // @@protoc_insertion_point(destructor:apipb.GracefulRestartCapability)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GracefulRestartCapability::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GracefulRestartCapability::ArenaDtor(void* object) {
  GracefulRestartCapability* _this = reinterpret_cast< GracefulRestartCapability* >(object);
  (void)_this;
}
void GracefulRestartCapability::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GracefulRestartCapability::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GracefulRestartCapability& GracefulRestartCapability::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GracefulRestartCapability_capability_2eproto.base);
  return *internal_default_instance();
}


void GracefulRestartCapability::Clear() {
// @@protoc_insertion_point(message_clear_start:apipb.GracefulRestartCapability)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tuples_.Clear();
  ::memset(&flags_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_) -
      reinterpret_cast<char*>(&flags_)) + sizeof(time_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GracefulRestartCapability::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 flags = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 time = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .apipb.GracefulRestartCapabilityTuple tuples = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_tuples(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GracefulRestartCapability::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apipb.GracefulRestartCapability)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 flags = 1;
  if (this->flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_flags(), target);
  }

  // uint32 time = 2;
  if (this->time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_time(), target);
  }

  // repeated .apipb.GracefulRestartCapabilityTuple tuples = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_tuples_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_tuples(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apipb.GracefulRestartCapability)
  return target;
}

size_t GracefulRestartCapability::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apipb.GracefulRestartCapability)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .apipb.GracefulRestartCapabilityTuple tuples = 3;
  total_size += 1UL * this->_internal_tuples_size();
  for (const auto& msg : this->tuples_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // uint32 flags = 1;
  if (this->flags() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_flags());
  }

  // uint32 time = 2;
  if (this->time() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_time());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GracefulRestartCapability::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apipb.GracefulRestartCapability)
  GOOGLE_DCHECK_NE(&from, this);
  const GracefulRestartCapability* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GracefulRestartCapability>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apipb.GracefulRestartCapability)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apipb.GracefulRestartCapability)
    MergeFrom(*source);
  }
}

void GracefulRestartCapability::MergeFrom(const GracefulRestartCapability& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apipb.GracefulRestartCapability)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tuples_.MergeFrom(from.tuples_);
  if (from.flags() != 0) {
    _internal_set_flags(from._internal_flags());
  }
  if (from.time() != 0) {
    _internal_set_time(from._internal_time());
  }
}

void GracefulRestartCapability::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apipb.GracefulRestartCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GracefulRestartCapability::CopyFrom(const GracefulRestartCapability& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apipb.GracefulRestartCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GracefulRestartCapability::IsInitialized() const {
  return true;
}

void GracefulRestartCapability::InternalSwap(GracefulRestartCapability* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  tuples_.InternalSwap(&other->tuples_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GracefulRestartCapability, time_)
      + sizeof(GracefulRestartCapability::time_)
      - PROTOBUF_FIELD_OFFSET(GracefulRestartCapability, flags_)>(
          reinterpret_cast<char*>(&flags_),
          reinterpret_cast<char*>(&other->flags_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GracefulRestartCapability::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FourOctetASNCapability::InitAsDefaultInstance() {
}
class FourOctetASNCapability::_Internal {
 public:
};

FourOctetASNCapability::FourOctetASNCapability(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apipb.FourOctetASNCapability)
}
FourOctetASNCapability::FourOctetASNCapability(const FourOctetASNCapability& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  asn_ = from.asn_;
  // @@protoc_insertion_point(copy_constructor:apipb.FourOctetASNCapability)
}

void FourOctetASNCapability::SharedCtor() {
  asn_ = 0u;
}

FourOctetASNCapability::~FourOctetASNCapability() {
  // @@protoc_insertion_point(destructor:apipb.FourOctetASNCapability)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FourOctetASNCapability::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FourOctetASNCapability::ArenaDtor(void* object) {
  FourOctetASNCapability* _this = reinterpret_cast< FourOctetASNCapability* >(object);
  (void)_this;
}
void FourOctetASNCapability::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FourOctetASNCapability::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FourOctetASNCapability& FourOctetASNCapability::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FourOctetASNCapability_capability_2eproto.base);
  return *internal_default_instance();
}


void FourOctetASNCapability::Clear() {
// @@protoc_insertion_point(message_clear_start:apipb.FourOctetASNCapability)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  asn_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FourOctetASNCapability::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 asn = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          asn_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FourOctetASNCapability::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apipb.FourOctetASNCapability)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 asn = 1;
  if (this->asn() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_asn(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apipb.FourOctetASNCapability)
  return target;
}

size_t FourOctetASNCapability::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apipb.FourOctetASNCapability)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint32 asn = 1;
  if (this->asn() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_asn());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FourOctetASNCapability::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apipb.FourOctetASNCapability)
  GOOGLE_DCHECK_NE(&from, this);
  const FourOctetASNCapability* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FourOctetASNCapability>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apipb.FourOctetASNCapability)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apipb.FourOctetASNCapability)
    MergeFrom(*source);
  }
}

void FourOctetASNCapability::MergeFrom(const FourOctetASNCapability& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apipb.FourOctetASNCapability)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.asn() != 0) {
    _internal_set_asn(from._internal_asn());
  }
}

void FourOctetASNCapability::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apipb.FourOctetASNCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FourOctetASNCapability::CopyFrom(const FourOctetASNCapability& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apipb.FourOctetASNCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FourOctetASNCapability::IsInitialized() const {
  return true;
}

void FourOctetASNCapability::InternalSwap(FourOctetASNCapability* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(asn_, other->asn_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FourOctetASNCapability::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddPathCapabilityTuple::InitAsDefaultInstance() {
  ::apipb::_AddPathCapabilityTuple_default_instance_._instance.get_mutable()->family_ = const_cast< ::apipb::Family*>(
      ::apipb::Family::internal_default_instance());
}
class AddPathCapabilityTuple::_Internal {
 public:
  static const ::apipb::Family& family(const AddPathCapabilityTuple* msg);
};

const ::apipb::Family&
AddPathCapabilityTuple::_Internal::family(const AddPathCapabilityTuple* msg) {
  return *msg->family_;
}
void AddPathCapabilityTuple::clear_family() {
  if (GetArena() == nullptr && family_ != nullptr) {
    delete family_;
  }
  family_ = nullptr;
}
AddPathCapabilityTuple::AddPathCapabilityTuple(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apipb.AddPathCapabilityTuple)
}
AddPathCapabilityTuple::AddPathCapabilityTuple(const AddPathCapabilityTuple& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_family()) {
    family_ = new ::apipb::Family(*from.family_);
  } else {
    family_ = nullptr;
  }
  mode_ = from.mode_;
  // @@protoc_insertion_point(copy_constructor:apipb.AddPathCapabilityTuple)
}

void AddPathCapabilityTuple::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddPathCapabilityTuple_capability_2eproto.base);
  ::memset(&family_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mode_) -
      reinterpret_cast<char*>(&family_)) + sizeof(mode_));
}

AddPathCapabilityTuple::~AddPathCapabilityTuple() {
  // @@protoc_insertion_point(destructor:apipb.AddPathCapabilityTuple)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddPathCapabilityTuple::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete family_;
}

void AddPathCapabilityTuple::ArenaDtor(void* object) {
  AddPathCapabilityTuple* _this = reinterpret_cast< AddPathCapabilityTuple* >(object);
  (void)_this;
}
void AddPathCapabilityTuple::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddPathCapabilityTuple::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddPathCapabilityTuple& AddPathCapabilityTuple::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddPathCapabilityTuple_capability_2eproto.base);
  return *internal_default_instance();
}


void AddPathCapabilityTuple::Clear() {
// @@protoc_insertion_point(message_clear_start:apipb.AddPathCapabilityTuple)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && family_ != nullptr) {
    delete family_;
  }
  family_ = nullptr;
  mode_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddPathCapabilityTuple::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .apipb.Family family = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_family(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .apipb.AddPathCapabilityTuple.Mode mode = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_mode(static_cast<::apipb::AddPathCapabilityTuple_Mode>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddPathCapabilityTuple::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apipb.AddPathCapabilityTuple)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .apipb.Family family = 1;
  if (this->has_family()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::family(this), target, stream);
  }

  // .apipb.AddPathCapabilityTuple.Mode mode = 2;
  if (this->mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_mode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apipb.AddPathCapabilityTuple)
  return target;
}

size_t AddPathCapabilityTuple::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apipb.AddPathCapabilityTuple)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .apipb.Family family = 1;
  if (this->has_family()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *family_);
  }

  // .apipb.AddPathCapabilityTuple.Mode mode = 2;
  if (this->mode() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_mode());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddPathCapabilityTuple::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apipb.AddPathCapabilityTuple)
  GOOGLE_DCHECK_NE(&from, this);
  const AddPathCapabilityTuple* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddPathCapabilityTuple>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apipb.AddPathCapabilityTuple)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apipb.AddPathCapabilityTuple)
    MergeFrom(*source);
  }
}

void AddPathCapabilityTuple::MergeFrom(const AddPathCapabilityTuple& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apipb.AddPathCapabilityTuple)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_family()) {
    _internal_mutable_family()->::apipb::Family::MergeFrom(from._internal_family());
  }
  if (from.mode() != 0) {
    _internal_set_mode(from._internal_mode());
  }
}

void AddPathCapabilityTuple::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apipb.AddPathCapabilityTuple)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddPathCapabilityTuple::CopyFrom(const AddPathCapabilityTuple& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apipb.AddPathCapabilityTuple)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddPathCapabilityTuple::IsInitialized() const {
  return true;
}

void AddPathCapabilityTuple::InternalSwap(AddPathCapabilityTuple* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AddPathCapabilityTuple, mode_)
      + sizeof(AddPathCapabilityTuple::mode_)
      - PROTOBUF_FIELD_OFFSET(AddPathCapabilityTuple, family_)>(
          reinterpret_cast<char*>(&family_),
          reinterpret_cast<char*>(&other->family_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AddPathCapabilityTuple::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AddPathCapability::InitAsDefaultInstance() {
}
class AddPathCapability::_Internal {
 public:
};

AddPathCapability::AddPathCapability(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  tuples_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apipb.AddPathCapability)
}
AddPathCapability::AddPathCapability(const AddPathCapability& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      tuples_(from.tuples_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apipb.AddPathCapability)
}

void AddPathCapability::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddPathCapability_capability_2eproto.base);
}

AddPathCapability::~AddPathCapability() {
  // @@protoc_insertion_point(destructor:apipb.AddPathCapability)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddPathCapability::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AddPathCapability::ArenaDtor(void* object) {
  AddPathCapability* _this = reinterpret_cast< AddPathCapability* >(object);
  (void)_this;
}
void AddPathCapability::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddPathCapability::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddPathCapability& AddPathCapability::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddPathCapability_capability_2eproto.base);
  return *internal_default_instance();
}


void AddPathCapability::Clear() {
// @@protoc_insertion_point(message_clear_start:apipb.AddPathCapability)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tuples_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddPathCapability::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .apipb.AddPathCapabilityTuple tuples = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_tuples(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddPathCapability::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apipb.AddPathCapability)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apipb.AddPathCapabilityTuple tuples = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_tuples_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_tuples(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apipb.AddPathCapability)
  return target;
}

size_t AddPathCapability::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apipb.AddPathCapability)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .apipb.AddPathCapabilityTuple tuples = 1;
  total_size += 1UL * this->_internal_tuples_size();
  for (const auto& msg : this->tuples_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddPathCapability::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apipb.AddPathCapability)
  GOOGLE_DCHECK_NE(&from, this);
  const AddPathCapability* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddPathCapability>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apipb.AddPathCapability)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apipb.AddPathCapability)
    MergeFrom(*source);
  }
}

void AddPathCapability::MergeFrom(const AddPathCapability& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apipb.AddPathCapability)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tuples_.MergeFrom(from.tuples_);
}

void AddPathCapability::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apipb.AddPathCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddPathCapability::CopyFrom(const AddPathCapability& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apipb.AddPathCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddPathCapability::IsInitialized() const {
  return true;
}

void AddPathCapability::InternalSwap(AddPathCapability* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  tuples_.InternalSwap(&other->tuples_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AddPathCapability::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void EnhancedRouteRefreshCapability::InitAsDefaultInstance() {
}
class EnhancedRouteRefreshCapability::_Internal {
 public:
};

EnhancedRouteRefreshCapability::EnhancedRouteRefreshCapability(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apipb.EnhancedRouteRefreshCapability)
}
EnhancedRouteRefreshCapability::EnhancedRouteRefreshCapability(const EnhancedRouteRefreshCapability& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apipb.EnhancedRouteRefreshCapability)
}

void EnhancedRouteRefreshCapability::SharedCtor() {
}

EnhancedRouteRefreshCapability::~EnhancedRouteRefreshCapability() {
  // @@protoc_insertion_point(destructor:apipb.EnhancedRouteRefreshCapability)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void EnhancedRouteRefreshCapability::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void EnhancedRouteRefreshCapability::ArenaDtor(void* object) {
  EnhancedRouteRefreshCapability* _this = reinterpret_cast< EnhancedRouteRefreshCapability* >(object);
  (void)_this;
}
void EnhancedRouteRefreshCapability::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void EnhancedRouteRefreshCapability::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const EnhancedRouteRefreshCapability& EnhancedRouteRefreshCapability::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_EnhancedRouteRefreshCapability_capability_2eproto.base);
  return *internal_default_instance();
}


void EnhancedRouteRefreshCapability::Clear() {
// @@protoc_insertion_point(message_clear_start:apipb.EnhancedRouteRefreshCapability)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* EnhancedRouteRefreshCapability::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* EnhancedRouteRefreshCapability::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apipb.EnhancedRouteRefreshCapability)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apipb.EnhancedRouteRefreshCapability)
  return target;
}

size_t EnhancedRouteRefreshCapability::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apipb.EnhancedRouteRefreshCapability)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void EnhancedRouteRefreshCapability::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apipb.EnhancedRouteRefreshCapability)
  GOOGLE_DCHECK_NE(&from, this);
  const EnhancedRouteRefreshCapability* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<EnhancedRouteRefreshCapability>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apipb.EnhancedRouteRefreshCapability)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apipb.EnhancedRouteRefreshCapability)
    MergeFrom(*source);
  }
}

void EnhancedRouteRefreshCapability::MergeFrom(const EnhancedRouteRefreshCapability& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apipb.EnhancedRouteRefreshCapability)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void EnhancedRouteRefreshCapability::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apipb.EnhancedRouteRefreshCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EnhancedRouteRefreshCapability::CopyFrom(const EnhancedRouteRefreshCapability& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apipb.EnhancedRouteRefreshCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EnhancedRouteRefreshCapability::IsInitialized() const {
  return true;
}

void EnhancedRouteRefreshCapability::InternalSwap(EnhancedRouteRefreshCapability* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata EnhancedRouteRefreshCapability::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LongLivedGracefulRestartCapabilityTuple::InitAsDefaultInstance() {
  ::apipb::_LongLivedGracefulRestartCapabilityTuple_default_instance_._instance.get_mutable()->family_ = const_cast< ::apipb::Family*>(
      ::apipb::Family::internal_default_instance());
}
class LongLivedGracefulRestartCapabilityTuple::_Internal {
 public:
  static const ::apipb::Family& family(const LongLivedGracefulRestartCapabilityTuple* msg);
};

const ::apipb::Family&
LongLivedGracefulRestartCapabilityTuple::_Internal::family(const LongLivedGracefulRestartCapabilityTuple* msg) {
  return *msg->family_;
}
void LongLivedGracefulRestartCapabilityTuple::clear_family() {
  if (GetArena() == nullptr && family_ != nullptr) {
    delete family_;
  }
  family_ = nullptr;
}
LongLivedGracefulRestartCapabilityTuple::LongLivedGracefulRestartCapabilityTuple(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apipb.LongLivedGracefulRestartCapabilityTuple)
}
LongLivedGracefulRestartCapabilityTuple::LongLivedGracefulRestartCapabilityTuple(const LongLivedGracefulRestartCapabilityTuple& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_family()) {
    family_ = new ::apipb::Family(*from.family_);
  } else {
    family_ = nullptr;
  }
  ::memcpy(&flags_, &from.flags_,
    static_cast<size_t>(reinterpret_cast<char*>(&time_) -
    reinterpret_cast<char*>(&flags_)) + sizeof(time_));
  // @@protoc_insertion_point(copy_constructor:apipb.LongLivedGracefulRestartCapabilityTuple)
}

void LongLivedGracefulRestartCapabilityTuple::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LongLivedGracefulRestartCapabilityTuple_capability_2eproto.base);
  ::memset(&family_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_) -
      reinterpret_cast<char*>(&family_)) + sizeof(time_));
}

LongLivedGracefulRestartCapabilityTuple::~LongLivedGracefulRestartCapabilityTuple() {
  // @@protoc_insertion_point(destructor:apipb.LongLivedGracefulRestartCapabilityTuple)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LongLivedGracefulRestartCapabilityTuple::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete family_;
}

void LongLivedGracefulRestartCapabilityTuple::ArenaDtor(void* object) {
  LongLivedGracefulRestartCapabilityTuple* _this = reinterpret_cast< LongLivedGracefulRestartCapabilityTuple* >(object);
  (void)_this;
}
void LongLivedGracefulRestartCapabilityTuple::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LongLivedGracefulRestartCapabilityTuple::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LongLivedGracefulRestartCapabilityTuple& LongLivedGracefulRestartCapabilityTuple::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LongLivedGracefulRestartCapabilityTuple_capability_2eproto.base);
  return *internal_default_instance();
}


void LongLivedGracefulRestartCapabilityTuple::Clear() {
// @@protoc_insertion_point(message_clear_start:apipb.LongLivedGracefulRestartCapabilityTuple)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && family_ != nullptr) {
    delete family_;
  }
  family_ = nullptr;
  ::memset(&flags_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&time_) -
      reinterpret_cast<char*>(&flags_)) + sizeof(time_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LongLivedGracefulRestartCapabilityTuple::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .apipb.Family family = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_family(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 flags = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          flags_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 time = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          time_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LongLivedGracefulRestartCapabilityTuple::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apipb.LongLivedGracefulRestartCapabilityTuple)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .apipb.Family family = 1;
  if (this->has_family()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::family(this), target, stream);
  }

  // uint32 flags = 2;
  if (this->flags() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(2, this->_internal_flags(), target);
  }

  // uint32 time = 3;
  if (this->time() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_time(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apipb.LongLivedGracefulRestartCapabilityTuple)
  return target;
}

size_t LongLivedGracefulRestartCapabilityTuple::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apipb.LongLivedGracefulRestartCapabilityTuple)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .apipb.Family family = 1;
  if (this->has_family()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *family_);
  }

  // uint32 flags = 2;
  if (this->flags() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_flags());
  }

  // uint32 time = 3;
  if (this->time() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_time());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LongLivedGracefulRestartCapabilityTuple::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apipb.LongLivedGracefulRestartCapabilityTuple)
  GOOGLE_DCHECK_NE(&from, this);
  const LongLivedGracefulRestartCapabilityTuple* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LongLivedGracefulRestartCapabilityTuple>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apipb.LongLivedGracefulRestartCapabilityTuple)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apipb.LongLivedGracefulRestartCapabilityTuple)
    MergeFrom(*source);
  }
}

void LongLivedGracefulRestartCapabilityTuple::MergeFrom(const LongLivedGracefulRestartCapabilityTuple& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apipb.LongLivedGracefulRestartCapabilityTuple)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_family()) {
    _internal_mutable_family()->::apipb::Family::MergeFrom(from._internal_family());
  }
  if (from.flags() != 0) {
    _internal_set_flags(from._internal_flags());
  }
  if (from.time() != 0) {
    _internal_set_time(from._internal_time());
  }
}

void LongLivedGracefulRestartCapabilityTuple::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apipb.LongLivedGracefulRestartCapabilityTuple)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LongLivedGracefulRestartCapabilityTuple::CopyFrom(const LongLivedGracefulRestartCapabilityTuple& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apipb.LongLivedGracefulRestartCapabilityTuple)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LongLivedGracefulRestartCapabilityTuple::IsInitialized() const {
  return true;
}

void LongLivedGracefulRestartCapabilityTuple::InternalSwap(LongLivedGracefulRestartCapabilityTuple* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LongLivedGracefulRestartCapabilityTuple, time_)
      + sizeof(LongLivedGracefulRestartCapabilityTuple::time_)
      - PROTOBUF_FIELD_OFFSET(LongLivedGracefulRestartCapabilityTuple, family_)>(
          reinterpret_cast<char*>(&family_),
          reinterpret_cast<char*>(&other->family_));
}

::PROTOBUF_NAMESPACE_ID::Metadata LongLivedGracefulRestartCapabilityTuple::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void LongLivedGracefulRestartCapability::InitAsDefaultInstance() {
}
class LongLivedGracefulRestartCapability::_Internal {
 public:
};

LongLivedGracefulRestartCapability::LongLivedGracefulRestartCapability(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  tuples_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apipb.LongLivedGracefulRestartCapability)
}
LongLivedGracefulRestartCapability::LongLivedGracefulRestartCapability(const LongLivedGracefulRestartCapability& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      tuples_(from.tuples_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apipb.LongLivedGracefulRestartCapability)
}

void LongLivedGracefulRestartCapability::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_LongLivedGracefulRestartCapability_capability_2eproto.base);
}

LongLivedGracefulRestartCapability::~LongLivedGracefulRestartCapability() {
  // @@protoc_insertion_point(destructor:apipb.LongLivedGracefulRestartCapability)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void LongLivedGracefulRestartCapability::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void LongLivedGracefulRestartCapability::ArenaDtor(void* object) {
  LongLivedGracefulRestartCapability* _this = reinterpret_cast< LongLivedGracefulRestartCapability* >(object);
  (void)_this;
}
void LongLivedGracefulRestartCapability::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void LongLivedGracefulRestartCapability::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const LongLivedGracefulRestartCapability& LongLivedGracefulRestartCapability::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_LongLivedGracefulRestartCapability_capability_2eproto.base);
  return *internal_default_instance();
}


void LongLivedGracefulRestartCapability::Clear() {
// @@protoc_insertion_point(message_clear_start:apipb.LongLivedGracefulRestartCapability)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tuples_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* LongLivedGracefulRestartCapability::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .apipb.LongLivedGracefulRestartCapabilityTuple tuples = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_tuples(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* LongLivedGracefulRestartCapability::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apipb.LongLivedGracefulRestartCapability)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apipb.LongLivedGracefulRestartCapabilityTuple tuples = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_tuples_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_tuples(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apipb.LongLivedGracefulRestartCapability)
  return target;
}

size_t LongLivedGracefulRestartCapability::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apipb.LongLivedGracefulRestartCapability)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .apipb.LongLivedGracefulRestartCapabilityTuple tuples = 1;
  total_size += 1UL * this->_internal_tuples_size();
  for (const auto& msg : this->tuples_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void LongLivedGracefulRestartCapability::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apipb.LongLivedGracefulRestartCapability)
  GOOGLE_DCHECK_NE(&from, this);
  const LongLivedGracefulRestartCapability* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<LongLivedGracefulRestartCapability>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apipb.LongLivedGracefulRestartCapability)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apipb.LongLivedGracefulRestartCapability)
    MergeFrom(*source);
  }
}

void LongLivedGracefulRestartCapability::MergeFrom(const LongLivedGracefulRestartCapability& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apipb.LongLivedGracefulRestartCapability)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tuples_.MergeFrom(from.tuples_);
}

void LongLivedGracefulRestartCapability::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apipb.LongLivedGracefulRestartCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LongLivedGracefulRestartCapability::CopyFrom(const LongLivedGracefulRestartCapability& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apipb.LongLivedGracefulRestartCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LongLivedGracefulRestartCapability::IsInitialized() const {
  return true;
}

void LongLivedGracefulRestartCapability::InternalSwap(LongLivedGracefulRestartCapability* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  tuples_.InternalSwap(&other->tuples_);
}

::PROTOBUF_NAMESPACE_ID::Metadata LongLivedGracefulRestartCapability::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RouteRefreshCiscoCapability::InitAsDefaultInstance() {
}
class RouteRefreshCiscoCapability::_Internal {
 public:
};

RouteRefreshCiscoCapability::RouteRefreshCiscoCapability(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apipb.RouteRefreshCiscoCapability)
}
RouteRefreshCiscoCapability::RouteRefreshCiscoCapability(const RouteRefreshCiscoCapability& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apipb.RouteRefreshCiscoCapability)
}

void RouteRefreshCiscoCapability::SharedCtor() {
}

RouteRefreshCiscoCapability::~RouteRefreshCiscoCapability() {
  // @@protoc_insertion_point(destructor:apipb.RouteRefreshCiscoCapability)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RouteRefreshCiscoCapability::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RouteRefreshCiscoCapability::ArenaDtor(void* object) {
  RouteRefreshCiscoCapability* _this = reinterpret_cast< RouteRefreshCiscoCapability* >(object);
  (void)_this;
}
void RouteRefreshCiscoCapability::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RouteRefreshCiscoCapability::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RouteRefreshCiscoCapability& RouteRefreshCiscoCapability::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RouteRefreshCiscoCapability_capability_2eproto.base);
  return *internal_default_instance();
}


void RouteRefreshCiscoCapability::Clear() {
// @@protoc_insertion_point(message_clear_start:apipb.RouteRefreshCiscoCapability)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RouteRefreshCiscoCapability::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RouteRefreshCiscoCapability::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apipb.RouteRefreshCiscoCapability)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apipb.RouteRefreshCiscoCapability)
  return target;
}

size_t RouteRefreshCiscoCapability::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apipb.RouteRefreshCiscoCapability)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RouteRefreshCiscoCapability::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apipb.RouteRefreshCiscoCapability)
  GOOGLE_DCHECK_NE(&from, this);
  const RouteRefreshCiscoCapability* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RouteRefreshCiscoCapability>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apipb.RouteRefreshCiscoCapability)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apipb.RouteRefreshCiscoCapability)
    MergeFrom(*source);
  }
}

void RouteRefreshCiscoCapability::MergeFrom(const RouteRefreshCiscoCapability& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apipb.RouteRefreshCiscoCapability)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void RouteRefreshCiscoCapability::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apipb.RouteRefreshCiscoCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RouteRefreshCiscoCapability::CopyFrom(const RouteRefreshCiscoCapability& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apipb.RouteRefreshCiscoCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RouteRefreshCiscoCapability::IsInitialized() const {
  return true;
}

void RouteRefreshCiscoCapability::InternalSwap(RouteRefreshCiscoCapability* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RouteRefreshCiscoCapability::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FqdnCapability::InitAsDefaultInstance() {
}
class FqdnCapability::_Internal {
 public:
};

FqdnCapability::FqdnCapability(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apipb.FqdnCapability)
}
FqdnCapability::FqdnCapability(const FqdnCapability& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  host_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_host_name().empty()) {
    host_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_host_name(),
      GetArena());
  }
  domain_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_domain_name().empty()) {
    domain_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_domain_name(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:apipb.FqdnCapability)
}

void FqdnCapability::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FqdnCapability_capability_2eproto.base);
  host_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  domain_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

FqdnCapability::~FqdnCapability() {
  // @@protoc_insertion_point(destructor:apipb.FqdnCapability)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FqdnCapability::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  host_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  domain_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FqdnCapability::ArenaDtor(void* object) {
  FqdnCapability* _this = reinterpret_cast< FqdnCapability* >(object);
  (void)_this;
}
void FqdnCapability::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FqdnCapability::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FqdnCapability& FqdnCapability::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FqdnCapability_capability_2eproto.base);
  return *internal_default_instance();
}


void FqdnCapability::Clear() {
// @@protoc_insertion_point(message_clear_start:apipb.FqdnCapability)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  host_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  domain_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FqdnCapability::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string host_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_host_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apipb.FqdnCapability.host_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string domain_name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_domain_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apipb.FqdnCapability.domain_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FqdnCapability::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apipb.FqdnCapability)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string host_name = 1;
  if (this->host_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_host_name().data(), static_cast<int>(this->_internal_host_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "apipb.FqdnCapability.host_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_host_name(), target);
  }

  // string domain_name = 2;
  if (this->domain_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_domain_name().data(), static_cast<int>(this->_internal_domain_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "apipb.FqdnCapability.domain_name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_domain_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apipb.FqdnCapability)
  return target;
}

size_t FqdnCapability::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apipb.FqdnCapability)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string host_name = 1;
  if (this->host_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_host_name());
  }

  // string domain_name = 2;
  if (this->domain_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_domain_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FqdnCapability::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apipb.FqdnCapability)
  GOOGLE_DCHECK_NE(&from, this);
  const FqdnCapability* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FqdnCapability>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apipb.FqdnCapability)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apipb.FqdnCapability)
    MergeFrom(*source);
  }
}

void FqdnCapability::MergeFrom(const FqdnCapability& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apipb.FqdnCapability)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.host_name().size() > 0) {
    _internal_set_host_name(from._internal_host_name());
  }
  if (from.domain_name().size() > 0) {
    _internal_set_domain_name(from._internal_domain_name());
  }
}

void FqdnCapability::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apipb.FqdnCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FqdnCapability::CopyFrom(const FqdnCapability& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apipb.FqdnCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FqdnCapability::IsInitialized() const {
  return true;
}

void FqdnCapability::InternalSwap(FqdnCapability* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  host_name_.Swap(&other->host_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  domain_name_.Swap(&other->domain_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata FqdnCapability::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SoftwareVersionCapability::InitAsDefaultInstance() {
}
class SoftwareVersionCapability::_Internal {
 public:
};

SoftwareVersionCapability::SoftwareVersionCapability(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apipb.SoftwareVersionCapability)
}
SoftwareVersionCapability::SoftwareVersionCapability(const SoftwareVersionCapability& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  software_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_software_version().empty()) {
    software_version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_software_version(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:apipb.SoftwareVersionCapability)
}

void SoftwareVersionCapability::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SoftwareVersionCapability_capability_2eproto.base);
  software_version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SoftwareVersionCapability::~SoftwareVersionCapability() {
  // @@protoc_insertion_point(destructor:apipb.SoftwareVersionCapability)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void SoftwareVersionCapability::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  software_version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SoftwareVersionCapability::ArenaDtor(void* object) {
  SoftwareVersionCapability* _this = reinterpret_cast< SoftwareVersionCapability* >(object);
  (void)_this;
}
void SoftwareVersionCapability::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void SoftwareVersionCapability::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SoftwareVersionCapability& SoftwareVersionCapability::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SoftwareVersionCapability_capability_2eproto.base);
  return *internal_default_instance();
}


void SoftwareVersionCapability::Clear() {
// @@protoc_insertion_point(message_clear_start:apipb.SoftwareVersionCapability)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  software_version_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SoftwareVersionCapability::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string software_version = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_software_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apipb.SoftwareVersionCapability.software_version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SoftwareVersionCapability::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apipb.SoftwareVersionCapability)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string software_version = 1;
  if (this->software_version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_software_version().data(), static_cast<int>(this->_internal_software_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "apipb.SoftwareVersionCapability.software_version");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_software_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apipb.SoftwareVersionCapability)
  return target;
}

size_t SoftwareVersionCapability::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apipb.SoftwareVersionCapability)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string software_version = 1;
  if (this->software_version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_software_version());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SoftwareVersionCapability::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apipb.SoftwareVersionCapability)
  GOOGLE_DCHECK_NE(&from, this);
  const SoftwareVersionCapability* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SoftwareVersionCapability>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apipb.SoftwareVersionCapability)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apipb.SoftwareVersionCapability)
    MergeFrom(*source);
  }
}

void SoftwareVersionCapability::MergeFrom(const SoftwareVersionCapability& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apipb.SoftwareVersionCapability)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.software_version().size() > 0) {
    _internal_set_software_version(from._internal_software_version());
  }
}

void SoftwareVersionCapability::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apipb.SoftwareVersionCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SoftwareVersionCapability::CopyFrom(const SoftwareVersionCapability& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apipb.SoftwareVersionCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SoftwareVersionCapability::IsInitialized() const {
  return true;
}

void SoftwareVersionCapability::InternalSwap(SoftwareVersionCapability* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  software_version_.Swap(&other->software_version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata SoftwareVersionCapability::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void UnknownCapability::InitAsDefaultInstance() {
}
class UnknownCapability::_Internal {
 public:
};

UnknownCapability::UnknownCapability(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:apipb.UnknownCapability)
}
UnknownCapability::UnknownCapability(const UnknownCapability& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value().empty()) {
    value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_value(),
      GetArena());
  }
  code_ = from.code_;
  // @@protoc_insertion_point(copy_constructor:apipb.UnknownCapability)
}

void UnknownCapability::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UnknownCapability_capability_2eproto.base);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  code_ = 0u;
}

UnknownCapability::~UnknownCapability() {
  // @@protoc_insertion_point(destructor:apipb.UnknownCapability)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UnknownCapability::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UnknownCapability::ArenaDtor(void* object) {
  UnknownCapability* _this = reinterpret_cast< UnknownCapability* >(object);
  (void)_this;
}
void UnknownCapability::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UnknownCapability::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UnknownCapability& UnknownCapability::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UnknownCapability_capability_2eproto.base);
  return *internal_default_instance();
}


void UnknownCapability::Clear() {
// @@protoc_insertion_point(message_clear_start:apipb.UnknownCapability)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  code_ = 0u;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UnknownCapability::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint32 code = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          code_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UnknownCapability::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apipb.UnknownCapability)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 code = 1;
  if (this->code() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(1, this->_internal_code(), target);
  }

  // bytes value = 2;
  if (this->value().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apipb.UnknownCapability)
  return target;
}

size_t UnknownCapability::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apipb.UnknownCapability)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_value());
  }

  // uint32 code = 1;
  if (this->code() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_code());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UnknownCapability::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apipb.UnknownCapability)
  GOOGLE_DCHECK_NE(&from, this);
  const UnknownCapability* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UnknownCapability>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apipb.UnknownCapability)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apipb.UnknownCapability)
    MergeFrom(*source);
  }
}

void UnknownCapability::MergeFrom(const UnknownCapability& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apipb.UnknownCapability)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {
    _internal_set_value(from._internal_value());
  }
  if (from.code() != 0) {
    _internal_set_code(from._internal_code());
  }
}

void UnknownCapability::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apipb.UnknownCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnknownCapability::CopyFrom(const UnknownCapability& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apipb.UnknownCapability)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnknownCapability::IsInitialized() const {
  return true;
}

void UnknownCapability::InternalSwap(UnknownCapability* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(code_, other->code_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UnknownCapability::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace apipb
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::apipb::MultiProtocolCapability* Arena::CreateMaybeMessage< ::apipb::MultiProtocolCapability >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apipb::MultiProtocolCapability >(arena);
}
template<> PROTOBUF_NOINLINE ::apipb::RouteRefreshCapability* Arena::CreateMaybeMessage< ::apipb::RouteRefreshCapability >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apipb::RouteRefreshCapability >(arena);
}
template<> PROTOBUF_NOINLINE ::apipb::CarryingLabelInfoCapability* Arena::CreateMaybeMessage< ::apipb::CarryingLabelInfoCapability >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apipb::CarryingLabelInfoCapability >(arena);
}
template<> PROTOBUF_NOINLINE ::apipb::ExtendedNexthopCapabilityTuple* Arena::CreateMaybeMessage< ::apipb::ExtendedNexthopCapabilityTuple >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apipb::ExtendedNexthopCapabilityTuple >(arena);
}
template<> PROTOBUF_NOINLINE ::apipb::ExtendedNexthopCapability* Arena::CreateMaybeMessage< ::apipb::ExtendedNexthopCapability >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apipb::ExtendedNexthopCapability >(arena);
}
template<> PROTOBUF_NOINLINE ::apipb::GracefulRestartCapabilityTuple* Arena::CreateMaybeMessage< ::apipb::GracefulRestartCapabilityTuple >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apipb::GracefulRestartCapabilityTuple >(arena);
}
template<> PROTOBUF_NOINLINE ::apipb::GracefulRestartCapability* Arena::CreateMaybeMessage< ::apipb::GracefulRestartCapability >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apipb::GracefulRestartCapability >(arena);
}
template<> PROTOBUF_NOINLINE ::apipb::FourOctetASNCapability* Arena::CreateMaybeMessage< ::apipb::FourOctetASNCapability >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apipb::FourOctetASNCapability >(arena);
}
template<> PROTOBUF_NOINLINE ::apipb::AddPathCapabilityTuple* Arena::CreateMaybeMessage< ::apipb::AddPathCapabilityTuple >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apipb::AddPathCapabilityTuple >(arena);
}
template<> PROTOBUF_NOINLINE ::apipb::AddPathCapability* Arena::CreateMaybeMessage< ::apipb::AddPathCapability >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apipb::AddPathCapability >(arena);
}
template<> PROTOBUF_NOINLINE ::apipb::EnhancedRouteRefreshCapability* Arena::CreateMaybeMessage< ::apipb::EnhancedRouteRefreshCapability >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apipb::EnhancedRouteRefreshCapability >(arena);
}
template<> PROTOBUF_NOINLINE ::apipb::LongLivedGracefulRestartCapabilityTuple* Arena::CreateMaybeMessage< ::apipb::LongLivedGracefulRestartCapabilityTuple >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apipb::LongLivedGracefulRestartCapabilityTuple >(arena);
}
template<> PROTOBUF_NOINLINE ::apipb::LongLivedGracefulRestartCapability* Arena::CreateMaybeMessage< ::apipb::LongLivedGracefulRestartCapability >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apipb::LongLivedGracefulRestartCapability >(arena);
}
template<> PROTOBUF_NOINLINE ::apipb::RouteRefreshCiscoCapability* Arena::CreateMaybeMessage< ::apipb::RouteRefreshCiscoCapability >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apipb::RouteRefreshCiscoCapability >(arena);
}
template<> PROTOBUF_NOINLINE ::apipb::FqdnCapability* Arena::CreateMaybeMessage< ::apipb::FqdnCapability >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apipb::FqdnCapability >(arena);
}
template<> PROTOBUF_NOINLINE ::apipb::SoftwareVersionCapability* Arena::CreateMaybeMessage< ::apipb::SoftwareVersionCapability >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apipb::SoftwareVersionCapability >(arena);
}
template<> PROTOBUF_NOINLINE ::apipb::UnknownCapability* Arena::CreateMaybeMessage< ::apipb::UnknownCapability >(Arena* arena) {
  return Arena::CreateMessageInternal< ::apipb::UnknownCapability >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
